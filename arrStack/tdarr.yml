version: "3.6"
services: 
  tdarr:
    container_name: tdarr
    image: ghcr.io/haveagitgat/tdarr:latest
    restart: unless-stopped
    network_mode: bridge
    ports:
      - 8265:8265 # webUI port
      - 8266:8266 # server port
      - 8267:8267 # Internal node port
      - 8268:8268 # Example extra node port
    environment:
      - TZ=Europe/London
      - PUID=1000
      - PGID=1000
      - UMASK_SET=002
      - serverIP=0.0.0.0
      - serverPort=8266
      - webUIPort=8265
      - internalNode=true
      - inContainer=true
      - nodeName=MyInternalNode
    volumes:
      - /Volumes/Docker/configs/tdarr/server:/app/server
      - /Volumes/Docker/configs/tdarr/configs:/app/configs
      - /Volumes/Docker/configs/tdarr/logs:/app/logs
      - /Volumes/Docker/data:/media
      - /Volumes/Docker/configs/tdarr/transcode_cache:/temp
    networks:
      - "mydockernet"


# node example
  tdarr-node:
    container_name: tdarr-node
    image: ghcr.io/haveagitgat/tdarr_node:latest
    restart: unless-stopped
    network_mode: service:tdarr
    environment:
      - TZ=Europe/London
      - PUID=1000
      - PGID=1000
      - UMASK_SET=002
      - nodeName=MainNode
      - serverIP=0.0.0.0
      - serverPort=8266
      - inContainer=true
    volumes:
      - /Volumes/Docker/configs/tdarr/server:/app/server
      - /Volumes/Docker/configs/tdarr/configs:/app/configs
      - /Volumes/Docker/configs/tdarr/logs:/app/logs
      - /Volumes/Docker/data:/media
      - /Volumes/Docker/configs/tdarr/transcode_cache:/temp


networks:
  mydockernet:
    external:
      name: mydockernet
